@use "../abstracts/mixins";
@use "../abstracts/variables";

body,
button,
input,
select,
textarea {
  color: variables.$color__text-main;
  font-family: variables.$font__main;
  @include mixins.fontSize(18px);
  line-height: variables.$font__line-height-body;
}

/*================================
=            Headings            =
================================*/

h1,
h2,
h3,
h4,
h5,
h6 {
  clear: both;
}

%h1 {
  margin: 0.25rem 0 0;
  color: variables.$black;
  font-family: variables.$font__ExpoSerif;
  font-weight: 600;
  line-height: 1.25;
  @include mixins.fontSize(28px);
}

%h2 {
  margin: 2rem 0 1rem;
  color: variables.$black;
  font-family: variables.$font__ExpoSerif;
  font-weight: 600;
  line-height: 1.3;
  @include mixins.fontSize(24px);
}

%h3 {
  margin: 1.5rem 0 0.5rem;
  color: variables.$black;
  font-family: variables.$font__ExpoSerif;
  font-weight: normal;
  line-height: 1.5;
  @include mixins.fontSize(22px);
}

%h4 {
  margin: 1rem 0;
  color: variables.$dark-gray;
  font-family: variables.$font__SourceSans;
  font-weight: normal;
  font-style: italic;
  letter-spacing: 0.4px;
  @include mixins.fontSize(18px);
}

.entry-content {
  h1:not([class]) {
    @extend %h1;
  }

  h2:not([class]) {
    @extend %h2;
  }

  h3:not([class]) {
    @extend %h3;
  }

  h4:not([class]) {
    @extend %h4;
  }
}

/*============================
=            Copy            =
============================*/

p {
  margin: 0 0 1rem;
  line-height: 1.5;
}

hr {
  height: 1px;
  margin-bottom: 1.5em;
  background-color: variables.$color__background-hr;
  border: 0;
}

b,
strong {
  font-weight: 600;
}

dfn,
cite,
em,
i {
  font-style: italic;
}

blockquote {
  margin: 0 1.5em;
}

blockquote,
q {
  quotes: "" "";

  &::before,
  &::after {
    content: "";
  }
}

address {
  margin: 0 0 1.5em;
}

pre {
  max-width: 100%;
  margin-bottom: 1.6em;
  padding: 1.6em;
  overflow: auto;
  font-family: variables.$font__pre;
  line-height: variables.$font__line-height-pre;
  background: variables.$color__background-pre;
  @include mixins.fontSize(14px);
}

code,
kbd,
tt,
var {
  font-family: variables.$font__code;
  @include mixins.fontSize(14px);
}

abbr,
acronym {
  border-bottom: 1px dotted variables.$color__border-abbr;
  cursor: help;
}

mark,
ins {
  text-decoration: none;
  background: variables.$color__background-ins;
}

big {
  font-size: 125%;
}

/*=============================
=            Links            =
=============================*/
a {
  color: variables.$color__link;
  text-decoration: none;
  @include mixins.transition(all 0.3s ease-in-out);

  &:visited {
    color: variables.$color__link-visited;
  }

  &:hover,
  &:focus,
  &:active {
    color: variables.$color__link-hover;
  }

  &:focus {
    outline: thin dotted;
  }

  &:hover,
  &:active {
    outline: 0;
  }
}

/*==================================
=            Close Icon            =
==================================*/

.close-icon {
  position: relative;
  display: inline-block;
  width: 35px;
  height: 35px;
  overflow: hidden;

  &::before,
  &::after {
    position: absolute;
    top: 50%;
    left: 0;
    width: 100%;
    height: 2px;
    margin-top: -1px;
    background: variables.$black;
    content: "";
  }

  &::before {
    transform: rotate(45deg);
    transform: rotate(45deg);
    transform: rotate(45deg);
    transform: rotate(45deg);
    transform: rotate(45deg);
  }

  &::after {
    transform: rotate(-45deg);
    transform: rotate(-45deg);
    transform: rotate(-45deg);
    transform: rotate(-45deg);
    transform: rotate(-45deg);
  }
}
